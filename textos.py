# =============================================================================
# TEXTOS.PY - M√ìDULO DE AN√ÅLISIS TEXTUAL
# =============================================================================
# Este m√≥dulo contiene todas las funciones para generar an√°lisis textuales

def generar_explicacion_modo_calculo(datos):
    """
    Genera la explicaci√≥n espec√≠fica seg√∫n el modo de c√°lculo utilizado
    
    Args:
        datos (dict): Diccionario con todos los datos de la simulaci√≥n
    
    Returns:
        str: Texto explicativo del modo de c√°lculo
    """
    modo = datos['modo_calculo']
    tiempo_sin = datos['tiempo_sin_cinturon']
    tiempo_con = datos['tiempo_con_cinturon']
    
    if modo == "realista":
        return f"""
### üî¨ **An√°lisis F√≠sico Realista Aplicado:**

**¬øC√≥mo se determinaron los tiempos?**
- **Sin cintur√≥n:** Tiempo calculado = **{tiempo_sin:.3f}s** (impacto directo contra tablero/parabrisas)
- **Con cintur√≥n:** Tiempo calculado = **{tiempo_con:.3f}s** (cintur√≥n extiende la desaceleraci√≥n)

**üéØ Explicaci√≥n f√≠sica del cintur√≥n:**
El cintur√≥n de seguridad NO es solo una correa que te sostiene. F√≠sicamente:
1. **Distribuci√≥n de carga:** Reparte la fuerza sobre el torso (no solo el pecho)
2. **Extensibilidad:** El material del cintur√≥n se estira ligeramente
3. **Sistema de frenado:** Mecanismo que permite extensi√≥n controlada durante el impacto
4. **Resultado:** Aumenta el tiempo de desaceleraci√≥n de **{tiempo_sin:.3f}s** a **{tiempo_con:.3f}s**

**‚ö° Principio f√≠sico clave:**
Seg√∫n F = m √ó a, y a = Œîv/Œît, al aumentar el tiempo (Œît) autom√°ticamente se reduce la aceleraci√≥n (a) y por tanto la fuerza (F).
"""
    else:
        return f"""
### ‚öôÔ∏è **Modo Manual - Par√°metros Definidos:**

**Tiempos utilizados:**
- **Sin cintur√≥n:** **{tiempo_sin:.3f}s** (valor manual)
- **Con cintur√≥n:** **{tiempo_con:.3f}s** (valor manual)

**üìö Interpretaci√≥n educativa:**
En este modo, t√∫ defines los tiempos para explorar el principio f√≠sico. En la realidad, el cintur√≥n **causa** el aumento del tiempo por:
- Material extensible que absorbe energ√≠a
- Distribuci√≥n de fuerzas sobre √°rea mayor del cuerpo
- Sistemas de pretensores y limitadores de fuerza

**üéØ Principio demostrado:**
Al aumentar manualmente el tiempo de **{tiempo_sin:.3f}s** a **{tiempo_con:.3f}s**, observas c√≥mo disminuye la fuerza seg√∫n F = m √ó Œîv/Œît.
"""

def calcular_factores_comparacion(datos):
    """
    Calcula los factores de comparaci√≥n entre escenarios
    
    Args:
        datos (dict): Diccionario con todos los datos de la simulaci√≥n
    
    Returns:
        dict: Diccionario con factores de comparaci√≥n
    """
    p_sin = datos['parametros_sin']
    p_con = datos['parametros_con']
    
    return {
        'factor_reduccion_fuerza': abs(p_sin['fuerza']) / abs(p_con['fuerza']),
        'factor_reduccion_aceleracion': abs(p_sin['aceleracion']) / abs(p_con['aceleracion']),
        'factor_reduccion_tiempo': datos['tiempo_con_cinturon'] / datos['tiempo_sin_cinturon'],
        'reduccion_fuerza_pct': ((abs(p_sin['fuerza']) - abs(p_con['fuerza'])) / abs(p_sin['fuerza'])) * 100,
        'reduccion_aceleracion_pct': ((abs(p_sin['aceleracion']) - abs(p_con['aceleracion'])) / abs(p_sin['aceleracion'])) * 100,
        'reduccion_g_pct': ((abs(p_sin['g_force']) - abs(p_con['g_force'])) / abs(p_sin['g_force'])) * 100
    }

def determinar_nivel_riesgo(g_force):
    """
    Determina el nivel de riesgo basado en las fuerzas G
    
    Args:
        g_force (float): Fuerza G experimentada
    
    Returns:
        str: Nivel de riesgo con emoji
    """
    if abs(g_force) > 50:
        return 'üî¥ CR√çTICO'
    elif abs(g_force) > 20:
        return 'üü° ALTO'
    else:
        return 'üü¢ MODERADO'

def generar_seccion_resultados(datos):
    """
    Genera la secci√≥n de resultados de la simulaci√≥n
    
    Args:
        datos (dict): Diccionario con todos los datos de la simulaci√≥n
    
    Returns:
        str: Texto con los resultados formateados
    """
    p_sin = datos['parametros_sin']
    p_con = datos['parametros_con']
    t_sin = datos['tiempo_sin_cinturon']
    t_con = datos['tiempo_con_cinturon']
    
    return f"""
#### üî¥ **SIN Cintur√≥n de Seguridad:**
- ‚è±Ô∏è Tiempo de detenci√≥n: **{t_sin:.3f} segundos**
- üí• Fuerza de impacto: **{abs(p_sin['fuerza']):,.0f} Newtons**
- üìà Aceleraci√≥n: **{abs(p_sin['aceleracion']):.1f} m/s¬≤**
- üåç **Fuerzas G:** **{abs(p_sin['g_force']):.1f} G**

#### üîµ **CON Cintur√≥n de Seguridad:**
- ‚è±Ô∏è Tiempo de detenci√≥n: **{t_con:.3f} segundos**
- üí• Fuerza de impacto: **{abs(p_con['fuerza']):,.0f} Newtons**  
- üìà Aceleraci√≥n: **{abs(p_con['aceleracion']):.1f} m/s¬≤**
- üåç **Fuerzas G:** **{abs(p_con['g_force']):.1f} G**
"""

def generar_seccion_analisis_resultados(datos, factores):
    """
    Genera la secci√≥n IV del an√°lisis de resultados
    
    Args:
        datos (dict): Diccionario con todos los datos de la simulaci√≥n
        factores (dict): Factores de comparaci√≥n calculados
    
    Returns:
        str: Texto con el an√°lisis de resultados
    """
    velocidad_kmh = datos['velocidad_kmh']
    masa_cuerpo = datos['masa_cuerpo']
    t_sin = datos['tiempo_sin_cinturon']
    t_con = datos['tiempo_con_cinturon']
    factor_reduccion_fuerza = factores['factor_reduccion_fuerza']
    factor_reduccion_aceleracion = factores['factor_reduccion_aceleracion']
    factor_reduccion_tiempo = factores['factor_reduccion_tiempo']
    reduccion_g_pct = factores['reduccion_g_pct']
    
    return f"""
#### üéØ **IV. An√°lisis de Resultados - Principio F√≠sico Fundamental:**

**üìà Interpretaci√≥n de las Gr√°ficas:**
- **√Årea bajo la curva:** Ambas tienen la misma √°rea (mismo impulso: m √ó Œîv)
- **Altura del pico:** Sin cintur√≥n es **{factor_reduccion_fuerza:.1f}x m√°s alta**
- **Duraci√≥n:** Con cintur√≥n dura **{factor_reduccion_tiempo:.1f}x m√°s tiempo**

**üî¨ Principio F√≠sico Demostrado:**
```
F = m √ó a = m √ó (Œîv/Œît)
```
- **Mismo cambio de velocidad (Œîv):** De {velocidad_kmh} km/h a 0 km/h
- **Misma masa (m):** {masa_cuerpo} kg
- **Variable clave:** Tiempo de desaceleraci√≥n (Œît)

**üéØ Resultado Observado:**
Al aumentar Œît de **{t_sin:.3f}s** a **{t_con:.3f}s**, autom√°ticamente:
- La aceleraci√≥n se reduce **{factor_reduccion_aceleracion:.1f}x**
- La fuerza se reduce **{factor_reduccion_fuerza:.1f}x**
- Las fuerzas G se reducen **{reduccion_g_pct:.1f}%**

**üí° Conclusi√≥n F√≠sica:**
El cintur√≥n de seguridad salva vidas no por "sujetarte", sino por aumentar el tiempo de desaceleraci√≥n, lo que reduce dram√°ticamente las fuerzas destructivas seg√∫n las leyes fundamentales de la f√≠sica.
"""

def generar_analisis_completo(datos):
    """
    Genera el an√°lisis completo combinando todas las secciones
    
    Args:
        datos (dict): Diccionario con todos los datos de la simulaci√≥n
    
    Returns:
        str: Texto completo del an√°lisis
    """
    velocidad_kmh = datos['velocidad_kmh']
    velocidad_ms = datos['velocidad_ms']
    masa_cuerpo = datos['masa_cuerpo']
    modo_calculo = datos['modo_calculo']
    p_sin = datos['parametros_sin']
    p_con = datos['parametros_con']
    
    factores = calcular_factores_comparacion(datos)
    explicacion_modo = generar_explicacion_modo_calculo(datos)
    resultados = generar_seccion_resultados(datos)
    analisis_resultados = generar_seccion_analisis_resultados(datos, factores)
    
    return f"""
### üìä An√°lisis de Simulaci√≥n de Colisi√≥n

**Condiciones del impacto:**
- Velocidad inicial: **{velocidad_kmh} km/h** ({velocidad_ms:.1f} m/s)
- Masa del cuerpo: **{masa_cuerpo} kg**
- Modo de c√°lculo: **{modo_calculo.upper()}**

{explicacion_modo}

---

{resultados}

---

{analisis_resultados}

---

#### üèÜ **Resumen Cuantitativo:**
- **Extensi√≥n del tiempo:** **{factores['factor_reduccion_tiempo']:.1f}x mayor**
- **Reducci√≥n de fuerza:** **{factores['reduccion_fuerza_pct']:.1f}%**
- **Reducci√≥n de aceleraci√≥n:** **{factores['reduccion_aceleracion_pct']:.1f}%**
- **Reducci√≥n de fuerzas G:** **{factores['reduccion_g_pct']:.1f}%**
- **Nivel de riesgo sin cintur√≥n:** {determinar_nivel_riesgo(p_sin['g_force'])}
- **Nivel de riesgo con cintur√≥n:** {determinar_nivel_riesgo(p_con['g_force'])}

> **‚ö†Ô∏è Referencia m√©dica:** Fuerzas G superiores a 50G son t√≠picamente letales para humanos.
"""